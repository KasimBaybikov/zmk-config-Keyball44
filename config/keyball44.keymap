#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        minus {
            bindings = <&kp MINUS>;
            key-positions = <20 19>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <31 32>;
        };

        left-round {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 4 5>;
        };

        right-round {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        left-square {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        right-square {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        left-curly {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        right-curly {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESCAPE      &kp Q             &kp W               &kp E        &kp R      &kp T                   &kp Y            &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp LCTRL       &kp A             &kp S               &kp D        &kp F      &kp G                   &kp H            &kp J  &kp K      &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z             &kp X               &kp C        &kp V      &kp B                   &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
&kp LEFT_ALT    &kp LEFT_COMMAND  &lt 1 LEFT_COMMAND  &lt 5 SPACE  &lt 4 TAB             &lt 3 ENTER  &lt 2 BACKSPACE                                        &none
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp ESCAPE      &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp BACKSPACE
&kp LCTRL       &none         &none             &none         &none         &none                     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT     &none         &none
&kp LEFT_SHIFT  &none         &none             &none         &none         &none                     &none           &none           &trans        &trans        &none         &kp RIGHT_SHIFT
&kp LEFT_ALT    &trans        &kp LEFT_COMMAND  &trans        &trans                          &trans  &kp SPACE                                                                 &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&none   &none      &none   &none   &none   &none               &none           &none      &none             &none              &none                 &none
&none   &none      &none   &none   &none   &trans              &kp MINUS       &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SQT               &kp RIGHT_BRACKET
&none   &kp TILDE  &trans  &trans  &trans  &trans              &kp UNDERSCORE  &kp PLUS   &trans            &trans             &kp NON_US_BACKSLASH  &none
&trans  &trans     &trans  &trans  &trans              &trans  &trans                                                                                &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1      &kp F2  &kp F3  &kp F4        &kp F5        &kp F6                    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none
&kp F7      &kp F8  &kp F9  &kp F10       &kp F11       &kp F12                   &none                 &none                 &none       &none              &none            &none
&bt BT_CLR  &none   &none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2              &none                 &none                 &none       &none              &none            &none
&trans      &trans  &trans  &trans        &trans                          &trans  &trans                                                                                      &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp N1          &kp N2          &kp N3        &kp N4     &kp N5              &kp N6  &kp N7     &kp N8     &kp N9     &kp N0  &kp BACKSPACE
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none               &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &none   &none
&none   &none           &none           &none         &none      &none               &none   &none      &none      &none      &none   &none
&trans  &trans          &trans          &trans        &trans                 &trans  &to 0                                            &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
